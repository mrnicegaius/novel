import 'package:json_annotation/json_annotation.dart';
import 'state.dart';
import 'media.dart';
part 'chapter.g.dart';

enum EndType {
  @JsonValue('continue')
  carryOn,

  pause,

  decision,
}

@JsonSerializable(anyMap: true, checked: true, fieldRename: FieldRename.snake)
class Choice {
  String short;
  String long;
  String action;

  Choice(var short, var long, this.action)
    : this.short = short,
      this.long = long == null ? short: long;

  /// Factory function for creating from json, generated by json_serializable
  factory Choice.fromJson(Map json) => _$ChoiceFromJson(json);
}


@JsonSerializable(anyMap: true, checked: true, fieldRename: FieldRename.snake)
class EndAction {
  EndType type;
  List<Choice>? choices;

  EndAction(this.type, {this.choices});

  /// Factory function for creating from json, generated by json_serializable
  factory EndAction.fromJson(Map json) => _$EndActionFromJson(json);
}


@JsonSerializable(anyMap: true, checked: true, fieldRename: FieldRename.snake)
class SubChapter {
  List<Media> media;


  SubChapter(this.media);

  /// Factory function for creating from json, generated by json_serializable
  factory SubChapter.fromJson(Map json) => _$SubChapterFromJson(json);
}

@JsonSerializable(anyMap: true, fieldRename: FieldRename.snake)
class Chapter {
  String id;
  String? name;
  State state;
  List<SubChapter> subs;

  Chapter(this.id, this.subs, {this.name, var state})
    : this.state = fromMap(state);

  /// Factory function for creating from json, generated by json_serializable
  factory Chapter.fromJson(Map json) => _$ChapterFromJson(json);
}
